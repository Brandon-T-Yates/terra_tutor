// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'dart:io';

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static  FirebaseOptions get web
  { return FirebaseOptions(
    apiKey: _getFirebaseApiKeyWeb(),
    appId: '1:918297631908:web:6c62d45c6f366016b89a31',
    messagingSenderId: '918297631908',
    projectId: 'terra-tutor',
    authDomain: 'terra-tutor.firebaseapp.com',
    storageBucket: 'terra-tutor.appspot.com',
    measurementId: 'G-PZ0RPXQDXC',
  );
  }

  static FirebaseOptions get android{ return FirebaseOptions(
    apiKey: _getFirebaseApiKeyAndroid(),
    appId: '1:918297631908:android:a35564f80ecd5483b89a31',
    messagingSenderId: '918297631908',
    projectId: 'terra-tutor',
    storageBucket: 'terra-tutor.appspot.com',
  );
  }

  static FirebaseOptions get ios{ return FirebaseOptions(
    apiKey: _getFirebaseApiKeyIos(),
    appId: '1:918297631908:ios:035ecd00adcff741b89a31',
    messagingSenderId: '918297631908',
    projectId: 'terra-tutor',
    storageBucket: 'terra-tutor.appspot.com',
    iosBundleId: 'com.example.terraTutor',
  );
  }

  static FirebaseOptions get macos { return FirebaseOptions(
    apiKey: _getFirebaseApiKeyMacOs(),
    appId: '1:918297631908:ios:035ecd00adcff741b89a31',
    messagingSenderId: '918297631908',
    projectId: 'terra-tutor',
    storageBucket: 'terra-tutor.appspot.com',
    iosBundleId: 'com.example.terraTutor',
  );
  }
  static FirebaseOptions get windows{ return FirebaseOptions(
    apiKey: _getFirebaseApiKeyWindows(),
    appId: '1:918297631908:web:aa94031c713575f0b89a31',
    messagingSenderId: '918297631908',
    projectId: 'terra-tutor',
    authDomain: 'terra-tutor.firebaseapp.com',
    storageBucket: 'terra-tutor.appspot.com',
    measurementId: 'G-3GSKXBVH08',
  );
  }
  

   static String _getFirebaseApiKeyWeb() {
    final Map<String, String> env = Platform.environment;
    return env['FIREBASE_API_KEY_WEB'] ?? ''; 
  }
  
    static String _getFirebaseApiKeyAndroid() {
    final Map<String, String> env = Platform.environment;
    return env['FIREBASE_API_KEY_ANDROID'] ?? ''; 
  }

    static String _getFirebaseApiKeyIos() {
    final Map<String, String> env = Platform.environment;
    return env['FIREBASE_API_KEY_IOS'] ?? ''; 
  }

  static String _getFirebaseApiKeyMacOs() {
    final Map<String, String> env = Platform.environment;
    return env['FIREBASE_API_KEY_MACOS'] ?? '';
  }

  static String _getFirebaseApiKeyWindows() {
    final Map<String, String> env = Platform.environment;
    return env['FIREBASE_API_KEY_WINDOWS'] ?? '';
  }
}
